swagger: "2.0"

info:
  description: "Write\
    \ description\
    \ here."
  version: "0.0.1"
  title: "rndm"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "mikkovp@hotmail.com"
  license:
    name: "If you'd like to use this software, please ask me to add license."

tags:
  - name: "rndm"
    description: "Let rndm pick an item from your list"
    externalDocs:
      description: ""
      url: ""

host: "localhost:8080"
basePath: "/v1"
schemes:
  - "http"

consumes:
  - application/json
produces:
  - application/json

paths:
  /itemlists:
    post:
      tags:
        - "itemlist"
      summary: "Add item list"
      description: ""
      operationId: "addItemList"
      parameters:
        - in: "body"
          name: "body"
          description: "List with items"
          required: true
          schema:
            $ref: "#/definitions/ItemList"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                description: "Id of item list created"
        400:
          description: "Bad request"
        500:
          description: "Internal server error"
    get:
      tags:
        - "itemlist"
      summary: "Get item list"
      description: ""
      operationId: "getItemList"
      parameters:
        - in: "query"
          name: "itemListId"
          description: "item list id"
          required: true
          type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ItemList"
        400:
          description: "Bad request"
        403:
          description: "Forbidden"
        404:
          description: "Item list not found"
        500:
          description: "Internal server error"
    put:
      tags:
        - "itemlist"
      summary: "Update item list"
      description: ""
      operationId: "updateItemList"
      parameters:
        - in: "query"
          name: "itemListId"
          description: "Item list id"
          required: true
          type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                description: "Id of item list created"
        400:
          description: "Bad request"
        403:
          description: "Forbidden"
        404:
          description: "Item list not found"
        500:
          description: "Internal server error"
    delete:
      tags:
        - "itemlist"
      summary: "Delete item list"
      description: ""
      operationId: "deleteItemList"
      parameters:
        - in: "query"
          name: "itemListId"
          description: "item list id"
          required: true
          type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              name:
                type: "string"
                description: "Name of item list deleted"
        400:
          description: "Bad request"
        403:
          description: "Forbidden"
        404:
          description: "Item list not found"
        500:
          description: "Internal server error"
  /itemlists/{userId}:
    get:
      tags:
        - "itemlist"
      summary: "Get user's item lists"
      description: ""
      operationId: "getItemLists"
      parameters:
        - in: "path"
          name: "userId"
          description: "User id"
          required: true
          type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ItemList"
        400:
          description: "Bad request"
        403:
          description: "Forbidden"
        404:
          description: "Item list not found"
        500:
          description: "Internal server error"
  /itemlists/random:
    get:
      tags:
        - "itemlist"
      summary: "Get random item of item list"
      description: ""
      operationId: "getRandomItem"
      parameters:
        - in: "query"
          name: "itemListId"
          description: "Item list id"
          required: true
          type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              randomItem:
                type: "string"
                description: "Random item from item list"
        400:
          description: "Bad request"
        403:
          description: "Forbidden"
        404:
          description: "Item list not found"
        500:
          description: "Internal server error"

#      security:
#        - petstore_auth:
#            - "write:pets"
#            - "read:pets"

#securityDefinitions:
#  petstore_auth:
#    type: "oauth2"
#    authorizationUrl: "http://petstore.swagger.io/api/oauth/dialog"
#    flow: "implicit"
#    scopes:
#      write:pets: "modify pets in your account"
#      read:pets: "read your pets"
#  api_key:
#    type: "apiKey"
#    name: "api_key"
#    in: "header"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "string"
      userName:
        type: "string"
      password:
        type: "string"
  ItemList:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      items:
        type: "array"
        items:
          type: "string"
      userId:
        type: "string"
#  ApiResponse:
#    type: "object"
#    properties:
#      code:
#        type: "integer"
#        format: "int32"
#      type:
#        type: "string"
#      message:
#        type: "string"
#externalDocs:
#  description: "Find out more about Swagger"
#  url: "http://swagger.io"